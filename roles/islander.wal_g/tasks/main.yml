---
# tasks file for wal-g
- name: Fail for unsupported architecture
  fail:
    msg: "Can't install wal-g: unsupported arch ({{ ansible_architecture }})."
  when: ansible_architecture != "x86_64"

- name: Set package architecture
  set_fact:
    walg_pkg_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}"

- name: Get urls for latest release of wal-g
  uri:
    url: "{{ walg_release_url }}"
    body_format: json
    return_content: true
  changed_when: false
  register: walg_latest

- name: Parse wal-g binary url
  set_fact:
    walg_tar_gz: "{{ walg_latest.json | json_query(query) | first }}"
  vars:
    query: "assets[?name=='wal-g.linux-{{ walg_pkg_arch }}.tar.gz'].browser_download_url"

- name: Parse wal-g sha256 url
  set_fact:
    walg_sha256: "{{ walg_latest.json | json_query(query) | first }}"
  vars:
    query: "assets[?name=='wal-g.linux-{{ walg_pkg_arch }}.tar.gz.sha256'].browser_download_url"

- name: Download wal-g.tar.gz with checksum testing
  get_url:
    url: "{{ walg_tar_gz }}"
    dest: "{{ ansible_env.HOME }}"
    checksum: "sha256:{{ walg_sha256 }}"
  register: walg_download

- name: Install wal-g binary
  become: yes
  become_user: "{{ walg_owner }}"
  unarchive:
    src: "{{ walg_download.dest }}"
    dest: "{{ walg_bin_path }}"
    remote_src: yes
    creates: "{{ walg_bin_path }}/wal-g"
  when: not walg_download.failed
