---
# tasks file for stolon
- name: Fail for unsupported architecture
  fail:
    msg: "Can't install stolon: unsupported arch ({{ ansible_architecture }})."
  when:
    - ansible_architecture != "x86_64"

- name: create stolon folders
  become: yes
  become_user: "{{ stolon_binary_owner }}"
  file:
    state: directory
    dest: "{{ item.path }}"
    owner: "{{ item.owner }}"
    mode: "0755"
  loop:
    - path: "{{ stolon_opt_path }}"
      owner: root
    - path: "{{ stolon_release_path }}"
      owner: root
    - path: "{{ stolon_script_path }}"
      owner: "{{ stolon_user }}"
    - path: "{{ stolon_data_dir }}"
      owner: "{{ stolon_user }}"
    - path: "{{ stolon_config_dir }}"
      owner: "{{ stolon_user }}"
    - path: "{{ stolon_wal_dir }}"
      owner: "{{ stolon_user }}"
  loop_control:
    label: "{{ item.path }}"

- name: Deploy scripts
  copy:
    src: bin/
    dest: "{{ stolon_script_path }}"
    mode: preserve
    owner: "{{ stolon_user }}"

- name: Deploy templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
    owner: "{{ stolon_user }}"
  loop:
    - src: stolon_profile.sh.j2
      dest: "{{ stolon_script_path }}/stolon_profile"
    - src: pg_service.conf.j2
      dest: "{{ getent_passwd[stolon_user][4] }}/.pg_service.conf"

- name: Enable stolon_profile
  lineinfile:
    path: "{{ getent_passwd[stolon_user][4] }}/.bash_profile"
    line: "source '{{ stolon_script_path }}/stolon_profile'"

- name: Download stolon
  become: yes
  become_user: "{{ stolon_binary_owner }}"
  get_url:
    url: "{{ stolon_release_url }}"
    dest: "{{ ansible_env.HOME }}"
    mode: "0755"
  register: stolon_download
  when: '(stolon_package_names|length == 0)'

- name: Unarchive stolon archive
  become: yes
  become_user: "{{ stolon_binary_owner }}"
  unarchive:
    src: "{{ stolon_download.dest }}"
    dest: "{{ stolon_release_path }}"
    remote_src: yes
    creates: "{{ stolon_release_path }}/stolon-v0.17.0-linux-amd64/bin/stolon-keeper"
  when: stolon_package_names|length == 0

- name: Install stolon binaries
  become: yes
  become_user: root
  file:
    state: link
    src: "{{ stolon_bin_path }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    force: yes
  loop: "{{ stolon_binaries }}"
  when: stolon_package_names|length == 0

- name: Install stolon-packages when defined
  become: yes
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ stolon_package_names }}"
