---
# defaults file for generic linux role for postgres servers

linux_pg_version: '17'

linux_users:
  hacluster:
    - name: postgres
      system: true
      uid: 26
    - name: avchecker
      system: true
    - name: pgquartz
      system: true
    - name: pgfga
      system: true
    - name: pgroute66
      system: true
  backup:
    - name: minio
      system: true

linux_groups:
  hacluster:
    - name: postgres
      system: true
      gid: 26
  backup:
    - name: minio
      system: true

# You can define what RH products should be enabled for a group of servers
# the custom filter (see filter_plugins/core.py) will convert this hash into a list of products only applying to that group
linux_rhsm_poolids: {}
#  postgres:
#    # Postgresql12_8Server
#    - "0360c0e471df0ab20171f34552980362"
#    # rhel_misc
#    - "0360c0e47b1a20e9017b81870656140a"
#  backup:
#    # rhel_misc
#    - "0360c0e47b1a20e9017b81870656140a"

linux_packages:
  hacluster:
    - "postgresql{{ linux_pg_version|replace('.','') }}"
    - "postgresql{{ linux_pg_version|replace('.','') }}-server"
    - "postgresql{{ linux_pg_version|replace('.','') }}-contrib"
    - "postgresql{{ linux_pg_version|replace('.','') }}-devel"
    - "postgresql{{ linux_pg_version|replace('.','') }}-plpython3"
    - 'stolon'
    - 'wal-g-pg'
    - 'etcd'
  backup:
    - 'minio'
  localhosts:
    - 'chainsmith'

linux_public_repos:
  - name: PgVillage
    description: PgVillage RPM Library - RHEL $releasever - $basearch
    baseurl: https://repo.mannemsolutions.nl/yum/pgvillage/latest/el$releasever/$basearch
    gpgkey: https://repo.mannemsolutions.nl/yum/pgvillage/gpg_pubkey.asc
    gpgcheck: yes
    file: pgvillage
  - name: 'pgdg-common'
    description: PostgreSQL common RPMs for RHEL / Rocky $releasever - $basearch
    baseurl: https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-$releasever-$basearch
    enabled: yes
    gpgcheck: yes
    gpgkey: '{{ linux_pgdg_gpg_key[ansible_architecture] }}'
    #repo_gpgcheck: yes
    file: 'pgdg-redhat-all'
    exclude: etcd
  - name: 'pgdg-rhel-extras'
    description: Extra packages to support some RPMs in the PostgreSQL RPM repo RHEL / Rocky $releasever - $basearch
    baseurl: https://download.postgresql.org/pub/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch
    enabled: yes
    gpgcheck: yes
    gpgkey: '{{ linux_pgdg_gpg_key[ansible_architecture] }}'
    #repo_gpgcheck: yes
    file: 'pgdg-redhat-all'
  - name: 'pgdg{{ linux_pg_version }}'
    description: 'PostgreSQL {{ linux_pg_version }} for RHEL / Rocky $releasever - $basearch'
    baseurl: 'https://download.postgresql.org/pub/repos/yum/{{ linux_pg_version }}/redhat/rhel-$releasever-$basearch'
    enabled: yes
    gpgcheck: yes
    gpgkey: '{{ linux_pgdg_gpg_key[ansible_architecture] }}'
    #repo_gpgcheck: yes
    file: 'pgdg-redhat-all'
  - name: 'epel'
    description: 'Extra Packages for Enterprise Linux {{ ansible_distribution_major_version }} - $basearch'
    metalink: 'https://mirrors.fedoraproject.org/metalink?repo=epel-9&arch=$basearch&infra=$infra&content=$contentdir'
    enabled: yes
    gpgcheck: 'yes'
    gpgkey: 'https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}'
    #repo_gpgcheck: yes
    file: 'epel'

linux_disable_gpg_check: 'false'

linux_pgdg_gpg_key:
  x86_64: https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-RHEL
  aarch64: https://download.postgresql.org/pub/repos/yum/keys/PGDG-RPM-GPG-KEY-AARCH64-RHEL
  #aarch64: "https://download.postgresql.org/pub/repos/yum/keys/RPM-GPG-KEY-PGDG-AARCH64-RHEL$releasever"

linux_rh_subscription: {}
#  activationkey: "ORG1"
#  org_id: "ORG1"
#  pool_ids: "{}"
#  state: present

# repository rhel_misc
linux_rh_misc_repo: {}
#  name: "Rhel_Misc"
#  description: "Rhel Misc repository"
#  baseurl: "http://satellite.example.org/pulp/content/ORG1/Library/custom/rhel_misc/rhel_misc/"
#  enabled: "true"
#  gpgcheck: "true"
#  gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
#  sslverify: "true"
#  sslcacert: /etc/rhsm/ca/katello-server-ca.pem
#  sslclientkey: /etc/pki/entitlement/8675925567367701300-key.pem
#  sslclientcert: /etc/pki/entitlement/8675925567367701300.pem
#  priority: "20"
