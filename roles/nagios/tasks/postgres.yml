---
# tasks file for nagios

# This is a hack.
# - We could do it with postgres_user, but that fails on a standby.
# - We should do this with pgfga, but we don;t have that implemented yet
# - This way we always run on a master and that should always work
- name: create an nrpe user in Postgres (hack)
  become_user: "{{ nagios_running_postgresql_user }}"
  shell: psql -tc "select * from pg_user where usename='{{ nagios_nrpe_user }}'" | grep -q '[a-zA-Z0-9]' || psql -c "create user {{ nagios_nrpe_user }};alter user {{ nagios_nrpe_user }} superuser;"
  environment:
    PGSERVICE: master
  throttle: 1

- name: Install dependencies
  yum:
    name:
      - nrpe
      - check_postgres
    state: present

- name: create custom script folder
  file:
    path: "{{ nagios_scripts_folder }}"
    state: directory

- name: Deploy custom scripts
  copy:
    src: "files/nrpe/"
    dest: "{{ nagios_scripts_folder }}/"
    mode: 0755

- name: create links for check_postgres.pl
  file:
    src: /usr/bin/check_postgres.pl
    dest: "{{ nagios_scripts_folder }}/{{ item }}"
    state: link
  loop: "{{ nagios_check_postgres_links }}"

- name: config files
  template:
    src: "templates/{{ item.key }}.j2"
    dest: "{{ nagios_config_folder }}/{{ item.key }}.cfg"
    owner: "{{ nagios_nrpe_user }}"
    group: "{{ nagios_nrpe_group }}"
    mode: 0600
  loop: "{{ nagios_checks | dict2items }}"
  loop_control:
    label: "{{ item.key }}"

# We rely on nrpe user to directly connect to Postgres with Pipes
# Stolon has these named pipes in /tmp
# NRPE by default has PrivateTmp=true, and thus cannot connect to postgres on /tmp/.s.PGSQL.5432
# So, set PrivateTmp=false for this to work
- name: Crate nrpe override folder
  file:
    dest: /etc/systemd/system/nrpe.service.d
    state: directory
- name: Don't set PrivateTmp for nrpe service
  copy:
    dest: /etc/systemd/system/nrpe.service.d/override.conf
    content: |
      [Service]
      PrivateTmp=false

- name: "Start nrpe service"
  become: "true"
  systemd:
    name: nrpe.service
    state: restarted
    enabled: "false"
    daemon_reload: "true"
